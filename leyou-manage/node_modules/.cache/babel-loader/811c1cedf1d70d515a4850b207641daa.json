{"remainingRequest":"C:\\develop\\idea-space\\leyou3\\leyou-manage\\node_modules\\babel-loader\\lib\\index.js!C:\\develop\\idea-space\\leyou3\\leyou-manage\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\develop\\idea-space\\leyou3\\leyou-manage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\develop\\idea-space\\leyou3\\leyou-manage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\develop\\idea-space\\leyou3\\leyou-manage\\src\\components\\form\\Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\develop\\idea-space\\leyou3\\leyou-manage\\src\\components\\form\\Upload.vue","mtime":1581003219304},{"path":"C:\\develop\\idea-space\\leyou3\\leyou-manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\idea-space\\leyou3\\leyou-manage\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\develop\\idea-space\\leyou3\\leyou-manage\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\develop\\idea-space\\leyou3\\leyou-manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\idea-space\\leyou3\\leyou-manage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\develop\\\\idea-space\\\\leyou3\\\\leyou-manage\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Upload } from 'element-ui';\nimport fileUtil from './fileUtil';\nexport default {\n  name: \"vUpload\",\n  components: {\n    elUpload: Upload\n  },\n  props: {\n    url: {\n      type: String,\n      require: false\n    },\n    value: {},\n    multiple: {\n      type: Boolean,\n      default: true\n    },\n    picWidth: {\n      type: Number,\n      default: 150\n    },\n    picHeight: {\n      type: Number,\n      default: 150\n    },\n    needSignature: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      showBtn: false,\n      show: false,\n      dialogImageUrl: \"\",\n      avatarStyle: {\n        width: this.picWidth + 'px',\n        height: this.picHeight + 'px',\n        'line-height': this.picHeight + 'px'\n      },\n      fileList: [],\n      resp: {\n        expire: 0\n      }\n    };\n  },\n  mounted: function mounted() {\n    if (!this.value || this.value.length <= 0) {\n      return;\n    }\n\n    if (this.multiple) {\n      this.fileList = this.value.map(function (f) {\n        return {\n          response: f,\n          url: f\n        };\n      });\n    } else {\n      this.dialogImageUrl = this.value;\n    }\n  },\n  watch: {\n    value: {\n      deep: true,\n      handler: function handler(val) {\n        if (typeof val === \"string\") {\n          this.dialogImageUrl = val;\n        }\n      }\n    }\n  },\n  methods: {\n    handleUpload: function () {\n      var _handleUpload = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(params) {\n        var _this = this;\n\n        var file, fileType, isImage, isLt2M, filename, uploadUrl, formData, that;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                file = params.file;\n                fileType = file.type;\n                isImage = fileType.indexOf('image') !== -1;\n                isLt2M = file.size < 2 * 1024 * 1024;\n\n                if (isLt2M) {\n                  _context.next = 7;\n                  break;\n                }\n\n                this.$message.error('上传图片或视频大小不能超过 2MB!');\n                return _context.abrupt(\"return\");\n\n              case 7:\n                if (isImage) {\n                  _context.next = 10;\n                  break;\n                }\n\n                this.$message.error('请选择图片!');\n                return _context.abrupt(\"return\");\n\n              case 10:\n                // 准备文件名称\n                filename = file.name;\n                uploadUrl = this.url; // 准备上传表单\n\n                formData = new FormData(); // 是否需要签名\n\n                if (!this.needSignature) {\n                  _context.next = 25;\n                  break;\n                }\n\n                if (!(this.resp.expire < new Date().getTime())) {\n                  _context.next = 18;\n                  break;\n                }\n\n                _context.next = 17;\n                return this.$http.loadData(this.url);\n\n              case 17:\n                this.resp = _context.sent;\n\n              case 18:\n                // 修改文件名为随机文件名\n                filename = fileUtil.getFileName(filename, this.resp.dir); // 修改上传文件路径\n\n                uploadUrl = this.resp.host; // 准备请求参数\n\n                formData.append(\"key\", filename);\n                formData.append(\"policy\", this.resp.policy);\n                formData.append(\"OSSAccessKeyId\", this.resp.accessId);\n                formData.append(\"success_action_status\", '200');\n                formData.append(\"signature\", this.resp.signature);\n\n              case 25:\n                formData.append(\"file\", file);\n                that = this;\n                this.$http.post(uploadUrl, formData, {\n                  headers: {\n                    'Content-Type': 'multipart/form-data',\n                    'x': 'y'\n                  }\n                }).then(function (resp) {\n                  console.log(resp);\n\n                  if (resp.status < '300') {\n                    // 获取文件路径\n                    var fileUrl = resp.data || uploadUrl + \"/\" + filename; // 判断是多文件还是单文件\n\n                    if (!_this.multiple) {\n                      // 单文件，直接获取地址即可；\n                      _this.dialogImageUrl = fileUrl;\n\n                      _this.$emit(\"input\", fileUrl);\n                    } else {\n                      // 多文件，放到集合中\n                      var files = _this.$refs.multiUpload.uploadFiles;\n                      files[files.length - 1].response = fileUrl;\n                      _this.fileList = files;\n\n                      _this.$emit(\"input\", files.map(function (f) {\n                        return f.response;\n                      }));\n                    }\n                  } else {\n                    that.$message.error('上传失败');\n                  }\n                }).catch(function (err) {\n                  this.$message.error('上传失败');\n                  console.log(err);\n                });\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleUpload(_x) {\n        return _handleUpload.apply(this, arguments);\n      }\n\n      return handleUpload;\n    }(),\n    handleRemove: function handleRemove(file, fileList) {\n      this.fileList = fileList;\n      this.$emit(\"input\", fileList.map(function (f) {\n        return f.response;\n      }));\n    },\n    handlePictureCardPreview: function handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.response;\n      this.show = true;\n    },\n    removeSingle: function removeSingle() {\n      this.dialogImageUrl = \"\";\n      this.$refs.singleUpload.clearFiles();\n    }\n  }\n};",{"version":3,"sources":["Upload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <el-upload v-if=\"multiple\"\r\n               action=\"\"\r\n               list-type=\"picture-card\"\r\n               :on-preview=\"handlePictureCardPreview\"\r\n               :on-remove=\"handleRemove\"\r\n               ref=\"multiUpload\"\r\n               :file-list=\"fileList\"\r\n               :http-request=\"handleUpload\"\r\n    >\r\n      <i class=\"el-icon-plus\"></i>\r\n    </el-upload>\r\n    <el-upload ref=\"singleUpload\" v-else\r\n               action=\"\"\r\n               :style=\"avatarStyle\"\r\n               class=\"logo-uploader\"\r\n               :show-file-list=\"false\"\r\n               :http-request=\"handleUpload\"\r\n    >\r\n      <div @mouseover=\"showBtn=true\" @mouseout=\"showBtn=false\">\r\n        <i @click.stop=\"removeSingle\" v-show=\"dialogImageUrl && showBtn\" class=\"el-icon-close remove-btn\"></i>\r\n        <img v-if=\"dialogImageUrl\" :src=\"dialogImageUrl\" :style=\"avatarStyle\">\r\n        <i v-else class=\"el-icon-plus logo-uploader-icon\" :style=\"avatarStyle\"></i>\r\n      </div>\r\n    </el-upload>\r\n    <v-dialog v-model=\"show\" max-width=\"500\">\r\n      <img width=\"500px\" :src=\"dialogImageUrl\" alt=\"\">\r\n    </v-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {Upload} from 'element-ui';\r\n  import fileUtil from './fileUtil';\r\n\r\n\r\n  export default {\r\n    name: \"vUpload\",\r\n    components: {\r\n      elUpload: Upload\r\n    },\r\n    props: {\r\n      url: {\r\n        type: String,\r\n        require: false\r\n      },\r\n      value: {},\r\n      multiple: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      picWidth: {\r\n        type: Number,\r\n        default: 150\r\n      },\r\n      picHeight: {\r\n        type: Number,\r\n        default: 150\r\n      },\r\n      needSignature: {\r\n        type: Boolean,\r\n        default: false\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        showBtn: false,\r\n        show: false,\r\n        dialogImageUrl: \"\",\r\n        avatarStyle: {\r\n          width: this.picWidth + 'px',\r\n          height: this.picHeight + 'px',\r\n          'line-height': this.picHeight + 'px'\r\n        },\r\n        fileList: [],\r\n        resp: {expire: 0}\r\n      }\r\n    },\r\n    mounted() {\r\n      if (!this.value || this.value.length <= 0) {\r\n        return;\r\n      }\r\n      if (this.multiple) {\r\n        this.fileList = this.value.map(f => {\r\n          return {response: f, url: f}\r\n        });\r\n      } else {\r\n        this.dialogImageUrl = this.value;\r\n      }\r\n    },\r\n    watch: {\r\n      value: {\r\n        deep: true,\r\n        handler(val) {\r\n          if ((typeof val) === \"string\") {\r\n            this.dialogImageUrl = val;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      async handleUpload(params) {\r\n        const file = params.file;\r\n        const fileType = file.type;\r\n        const isImage = fileType.indexOf('image') !== -1;\r\n\r\n        const isLt2M = file.size < 2 * 1024 * 1024;\r\n\r\n        if (!isLt2M) {\r\n          this.$message.error('上传图片或视频大小不能超过 2MB!');\r\n          return;\r\n        }\r\n\r\n        if (!isImage) {\r\n          this.$message.error('请选择图片!');\r\n          return;\r\n        }\r\n        // 准备文件名称\r\n        let filename = file.name;\r\n        let uploadUrl = this.url;\r\n        // 准备上传表单\r\n        const formData = new FormData();\r\n        // 是否需要签名\r\n        if (this.needSignature) {\r\n          // 判断之前签名是否有效，如果超时，则重新申请一个\r\n          if (this.resp.expire < new Date().getTime()) {\r\n            // 上传到阿里，进行签名，把接收到的url作为签名接口地址\r\n            this.resp = await this.$http.loadData(this.url);\r\n          }\r\n          // 修改文件名为随机文件名\r\n          filename = fileUtil.getFileName(filename, this.resp.dir);\r\n          // 修改上传文件路径\r\n          uploadUrl = this.resp.host;\r\n          // 准备请求参数\r\n          formData.append(\"key\", filename);\r\n          formData.append(\"policy\", this.resp.policy);\r\n          formData.append(\"OSSAccessKeyId\", this.resp.accessId);\r\n          formData.append(\"success_action_status\", '200');\r\n          formData.append(\"signature\", this.resp.signature);\r\n        }\r\n        formData.append(\"file\", file);\r\n        const that = this;\r\n        this.$http.post(uploadUrl, formData, {headers: {'Content-Type': 'multipart/form-data', 'x': 'y'}})\r\n          .then(resp => {\r\n            console.log(resp);\r\n            if (resp.status < '300') {\r\n              // 获取文件路径\r\n              const fileUrl = resp.data || uploadUrl + \"/\" + filename;\r\n              // 判断是多文件还是单文件\r\n              if (!this.multiple) {\r\n                // 单文件，直接获取地址即可；\r\n                this.dialogImageUrl = fileUrl;\r\n                this.$emit(\"input\", fileUrl)\r\n              } else {\r\n                // 多文件，放到集合中\r\n                const files = this.$refs.multiUpload.uploadFiles;\r\n                files[files.length - 1].response = fileUrl;\r\n                this.fileList = files;\r\n                this.$emit(\"input\", files.map(f => f.response))\r\n              }\r\n            } else {\r\n              that.$message.error('上传失败');\r\n            }\r\n          })\r\n          .catch(function (err) {\r\n            this.$message.error('上传失败');\r\n            console.log(err);\r\n          });\r\n      },\r\n      handleRemove(file, fileList) {\r\n        this.fileList = fileList;\r\n        this.$emit(\"input\", fileList.map(f => f.response))\r\n      },\r\n      handlePictureCardPreview(file) {\r\n        this.dialogImageUrl = file.response;\r\n        this.show = true;\r\n      },\r\n      removeSingle() {\r\n        this.dialogImageUrl = \"\";\r\n        this.$refs.singleUpload.clearFiles();\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .logo-uploader {\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n    float: left;\r\n  }\r\n\r\n  .logo-uploader:hover {\r\n    border-color: #409EFF;\r\n  }\r\n\r\n  .logo-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n    text-align: center;\r\n  }\r\n\r\n  .remove-btn {\r\n    position: absolute;\r\n    right: 0;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .remove-btn:hover {\r\n    color: #c22;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components/form"}]}