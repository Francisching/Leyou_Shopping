{"remainingRequest":"D:\\heima129\\leyou-manage\\node_modules\\babel-loader\\lib\\index.js!D:\\heima129\\leyou-manage\\node_modules\\vuetify-loader\\lib\\loader.js!D:\\heima129\\leyou-manage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\heima129\\leyou-manage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\heima129\\leyou-manage\\src\\views\\item\\brand\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\heima129\\leyou-manage\\src\\views\\item\\brand\\Index.vue","mtime":1584263775516},{"path":"D:\\heima129\\leyou-manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\heima129\\leyou-manage\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\heima129\\leyou-manage\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"D:\\heima129\\leyou-manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\heima129\\leyou-manage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 导入自定义的表单组件\nimport BrandForm from './BrandForm';\nexport default {\n  name: \"brand\",\n  data: function data() {\n    return {\n      search: '',\n      // 搜索过滤字段\n      totalBrands: 0,\n      // 总条数\n      brands: [],\n      // 当前页品牌数据\n      loading: true,\n      // 是否在加载中\n      pagination: {},\n      // 分页信息\n      headers: [{\n        text: 'id',\n        align: 'center',\n        sortable: false,\n        value: 'id'\n      }, {\n        text: '名称',\n        align: 'center',\n        sortable: false,\n        value: 'name'\n      }, {\n        text: 'LOGO',\n        align: 'center',\n        sortable: false,\n        value: 'image'\n      }, {\n        text: '首字母',\n        align: 'center',\n        value: 'letter',\n        sortable: false\n      }, {\n        text: '操作',\n        align: 'center',\n        value: 'id',\n        sortable: false\n      }],\n      show: false,\n      // 控制对话框的显示\n      oldBrand: {},\n      // 即将被编辑的品牌数据\n      isEdit: false // 是否是编辑\n\n    };\n  },\n  mounted: function mounted() {// 渲染后执行\n    // 查询数据\n    //this.getDataFromServer();\n  },\n  watch: {\n    pagination: {\n      // 监视pagination属性的变化\n      deep: true,\n      // deep为true，会监视pagination的属性及属性中的对象属性变化\n      handler: function handler() {\n        // 变化后的回调函数，这里我们再次调用getDataFromServer即可\n        this.getDataFromServer();\n      }\n    },\n    search: {\n      // 监视搜索字段\n      handler: function handler() {\n        if (this.pagination.page !== 1) {\n          this.pagination.page = 1;\n          return;\n        }\n\n        this.getDataFromServer();\n      }\n    }\n  },\n  methods: {\n    getDataFromServer: function getDataFromServer() {\n      var _this = this;\n\n      // 从服务的加载数的方法。\n      // 发起请求\n      this.$http.get(\"/item/brand/page\", {\n        params: {\n          key: this.search,\n          // 搜索条件\n          page: this.pagination.page,\n          // 当前页\n          rows: this.pagination.rowsPerPage // 每页大小\n\n        }\n      }).then(function (resp) {\n        // 这里使用箭头函数\n        _this.brands = resp.data.items;\n        _this.totalBrands = resp.data.total; // 完成赋值后，把加载状态赋值为false\n\n        _this.loading = false;\n      }).catch(function () {\n        _this.brands = [];\n        _this.totalBrands = 0;\n        _this.loading = false;\n\n        _this.$message.info(\"查询的品牌不存在，换个条件试试！\");\n      });\n    },\n    addBrand: function addBrand() {\n      // 修改标记\n      this.isEdit = false; // 控制弹窗可见：\n\n      this.show = true; // 把oldBrand变为null\n\n      this.oldBrand = null;\n    },\n    editBrand: function editBrand(oldBrand) {\n      var _this2 = this;\n\n      // 根据品牌信息查询商品分类\n      this.$http.get(\"/item/category/of/brand/?id=\" + oldBrand.id).then(function (_ref) {\n        var data = _ref.data;\n        // 修改标记\n        _this2.isEdit = true; // 控制弹窗可见：\n\n        _this2.show = true; // 获取要编辑的brand\n\n        _this2.oldBrand = oldBrand; // 回显商品分类\n\n        _this2.oldBrand.categories = data;\n      });\n    },\n    closeWindow: function closeWindow() {\n      // 重新加载数据\n      this.getDataFromServer(); // 关闭窗口\n\n      this.show = false;\n    },\n    deleteBrand: function deleteBrand(id) {\n      var _this3 = this;\n\n      this.$http.delete(\"/item/brand/\" + id).then(function () {\n        // 重新加载数据\n        _this3.getDataFromServer();\n      }).catch(function () {\n        _this3.$message.error(\"删除失败！\");\n      });\n    }\n  },\n  components: {\n    BrandForm: BrandForm\n  }\n};",{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-card>\r\n    <v-card-title>\r\n      <v-btn color=\"primary\" @click=\"addBrand\">新增品牌</v-btn>\r\n      <!--搜索框，与search属性关联-->\r\n      <v-spacer/>\r\n      <v-flex xs3>\r\n      <v-text-field label=\"输入关键字搜索\" v-model.lazy=\"search\" append-icon=\"search\" hide-details/>\r\n      </v-flex>\r\n    </v-card-title>\r\n    <v-divider/>\r\n    <v-data-table\r\n      :headers=\"headers\"\r\n      :items=\"brands\"\r\n      :pagination.sync=\"pagination\"\r\n      :total-items=\"totalBrands\"\r\n      :loading=\"loading\"\r\n      class=\"elevation-1\"\r\n    >\r\n      <template slot=\"items\" slot-scope=\"props\">\r\n        <td class=\"text-xs-center\">{{ props.item.id }}</td>\r\n        <td class=\"text-xs-center\">{{ props.item.name }}</td>\r\n        <td class=\"text-xs-center\">\r\n          <img v-if=\"props.item.image\" :src=\"props.item.image\" width=\"130\" height=\"40\">\r\n          <span v-else>等待上传</span>\r\n        </td>\r\n        <td class=\"text-xs-center\">{{ props.item.letter }}</td>\r\n        <td class=\"justify-center layout px-0\">\r\n          <v-btn icon @click=\"editBrand(props.item)\">\r\n            <i class=\"el-icon-edit\"/>\r\n          </v-btn>\r\n          <v-btn icon @click=\"deleteBrand(props.item.id)\">\r\n            <i class=\"el-icon-delete\"/>\r\n          </v-btn>\r\n        </td>\r\n      </template>\r\n      <template v-slot:pageText=\"props\">\r\n        当前 {{ props.pageStart }} - {{ props.pageStop }} 共 {{ props.itemsLength }}条\r\n      </template>\r\n    </v-data-table>\r\n    <!--弹出的对话框-->\r\n    <v-dialog max-width=\"500\" v-model=\"show\" persistent scrollable>\r\n      <brand-form @close=\"closeWindow\" :oldBrand=\"oldBrand\" :isEdit=\"isEdit\"/>\r\n    </v-dialog>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\n  // 导入自定义的表单组件\r\n  import BrandForm from './BrandForm'\r\n\r\n  export default {\r\n    name: \"brand\",\r\n    data() {\r\n      return {\r\n        search: '', // 搜索过滤字段\r\n        totalBrands: 0, // 总条数\r\n        brands: [], // 当前页品牌数据\r\n        loading: true, // 是否在加载中\r\n        pagination: {}, // 分页信息\r\n        headers: [\r\n          {text: 'id', align: 'center',sortable: false, value: 'id'},\r\n          {text: '名称', align: 'center', sortable: false, value: 'name'},\r\n          {text: 'LOGO', align: 'center', sortable: false, value: 'image'},\r\n          {text: '首字母', align: 'center', value: 'letter', sortable: false,},\r\n          {text: '操作', align: 'center', value: 'id', sortable: false}\r\n        ],\r\n        show: false,// 控制对话框的显示\r\n        oldBrand: {}, // 即将被编辑的品牌数据\r\n        isEdit: false, // 是否是编辑\r\n      }\r\n    },\r\n    mounted() { // 渲染后执行\r\n      // 查询数据\r\n      //this.getDataFromServer();\r\n    },\r\n    watch: {\r\n      pagination: { // 监视pagination属性的变化\r\n        deep: true, // deep为true，会监视pagination的属性及属性中的对象属性变化\r\n        handler() {\r\n          // 变化后的回调函数，这里我们再次调用getDataFromServer即可\r\n          this.getDataFromServer();\r\n        }\r\n      },\r\n      search: { // 监视搜索字段\r\n        handler() {\r\n          if(this.pagination.page !== 1){\r\n            this.pagination.page=1;\r\n            return;\r\n          }\r\n          this.getDataFromServer();\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      getDataFromServer() { // 从服务的加载数的方法。\r\n        // 发起请求\r\n        this.$http.get(\"/item/brand/page\", {\r\n          params: {\r\n            key: this.search, // 搜索条件\r\n            page: this.pagination.page,// 当前页\r\n            rows: this.pagination.rowsPerPage// 每页大小\r\n          }\r\n        }).then(resp => { // 这里使用箭头函数\r\n          this.brands = resp.data.items;\r\n          this.totalBrands = resp.data.total;\r\n          // 完成赋值后，把加载状态赋值为false\r\n          this.loading = false;\r\n        }).catch(()=>{\r\n          this.brands = [];\r\n          this.totalBrands = 0;\r\n          this.loading = false;\r\n          this.$message.info(\"查询的品牌不存在，换个条件试试！\");\r\n        })\r\n      },\r\n      addBrand() {\r\n        // 修改标记\r\n        this.isEdit = false;\r\n        // 控制弹窗可见：\r\n        this.show = true;\r\n        // 把oldBrand变为null\r\n        this.oldBrand = null;\r\n      },\r\n      editBrand(oldBrand){\r\n        // 根据品牌信息查询商品分类\r\n        this.$http.get(\"/item/category/of/brand/?id=\"+oldBrand.id)\r\n          .then(({data}) => {\r\n            // 修改标记\r\n            this.isEdit = true;\r\n            // 控制弹窗可见：\r\n            this.show = true;\r\n            // 获取要编辑的brand\r\n            this.oldBrand = oldBrand\r\n            // 回显商品分类\r\n            this.oldBrand.categories = data;\r\n          })\r\n      },\r\n      closeWindow(){\r\n        // 重新加载数据\r\n        this.getDataFromServer();\r\n        // 关闭窗口\r\n        this.show = false;\r\n      },\r\n      deleteBrand(id){\r\n        this.$http.delete(\"/item/brand/\"+id)\r\n          .then(() => {\r\n            // 重新加载数据\r\n            this.getDataFromServer();\r\n          }).catch(()=>{\r\n            this.$message.error(\"删除失败！\");\r\n        })\r\n      }\r\n    },\r\n    components:{\r\n        BrandForm\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/views/item/brand"}]}