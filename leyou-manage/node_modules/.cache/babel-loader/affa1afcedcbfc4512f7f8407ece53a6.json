{"remainingRequest":"C:\\lesson\\heima92\\code\\leyou-manage\\node_modules\\babel-loader\\lib\\index.js!C:\\lesson\\heima92\\code\\leyou-manage\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\lesson\\heima92\\code\\leyou-manage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\lesson\\heima92\\code\\leyou-manage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\lesson\\heima92\\code\\leyou-manage\\src\\views\\item\\goods\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\lesson\\heima92\\code\\leyou-manage\\src\\views\\item\\goods\\Index.vue","mtime":1581778005381},{"path":"C:\\lesson\\heima92\\code\\leyou-manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\lesson\\heima92\\code\\leyou-manage\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\lesson\\heima92\\code\\leyou-manage\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\lesson\\heima92\\code\\leyou-manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\lesson\\heima92\\code\\leyou-manage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\lesson\\\\heima92\\\\code\\\\leyou-manage\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 导入自定义的表单组件\nimport GoodsForm from './GoodsForm';\nexport default {\n  name: \"goods\",\n  data: function data() {\n    return {\n      dialog: false,\n      saleable: true,\n      // 上架还是下架\n      brandOptions: [],\n      search: {\n        id: null,\n        category: {},\n        brandId: null\n      },\n      // 搜索过滤字段\n      totalGoods: 0,\n      // 总条数\n      goodsList: [],\n      // 当前页品牌数据\n      loading: true,\n      // 是否在加载中\n      pagination: {},\n      // 分页信息\n      headers: [{\n        text: 'id',\n        align: 'center',\n        sortable: false,\n        value: 'id'\n      }, {\n        text: '商品名称',\n        align: 'center',\n        sortable: false,\n        value: 'name'\n      }, {\n        text: '商品分类',\n        align: 'center',\n        sortable: false,\n        value: 'categoryName'\n      }, {\n        text: '品牌',\n        align: 'center',\n        value: 'brandName',\n        sortable: false\n      }, {\n        text: '操作',\n        align: 'center',\n        sortable: false\n      }],\n      show: false,\n      // 控制对话框的显示\n      oldGoods: {},\n      // 即将被编辑的商品信息\n      isEdit: false,\n      // 是否是编辑\n      step: 1 // 子组件中的步骤线索引，默认为1\n\n    };\n  },\n  mounted: function mounted() {// 渲染后执行\n    // 查询数据\n    //this.getDataFromServer();\n  },\n  watch: {\n    pagination: {\n      // 监视pagination属性的变化\n      deep: true,\n      // deep为true，会监视pagination的属性及属性中的对象属性变化\n      handler: function handler() {\n        // 变化后的回调函数，这里我们再次调用getDataFromServer即可\n        this.getDataFromServer();\n      }\n    },\n    saleable: function saleable() {\n      this.refresh();\n    },\n    \"search.category\": function searchCategory(val) {\n      var _this = this;\n\n      if (val) {\n        this.$http.get(\"/item/brand/of/category?id=\" + val.id).then(function (_ref) {\n          var data = _ref.data;\n          _this.brandOptions = data;\n        });\n      }\n\n      this.refresh();\n    },\n    \"search.brandId\": function searchBrandId(val) {\n      this.refresh();\n    }\n  },\n  methods: {\n    refresh: function refresh() {\n      if (this.pagination.page !== 1) {\n        this.pagination.page = 1;\n        return;\n      }\n\n      this.getDataFromServer();\n    },\n    getDataFromServer: function getDataFromServer() {\n      var _this2 = this;\n\n      // 从服务的加载数的方法。\n      // 发起请求\n      this.$http.get(\"/item/goods/spu/page\", {\n        params: {\n          id: this.search.id || null,\n          categoryId: this.search.category ? this.search.category.id : null,\n          // 搜索条件\n          brandId: this.search.brandId || null,\n          saleable: this.saleable === 0 ? null : this.saleable,\n          // 上下架\n          page: this.pagination.page,\n          // 当前页\n          rows: this.pagination.rowsPerPage // 每页大小\n\n        }\n      }).then(function (resp) {\n        // 这里使用箭头函数\n        _this2.goodsList = resp.data.items;\n        _this2.totalGoods = resp.data.total; // 完成赋值后，把加载状态赋值为false\n\n        _this2.loading = false;\n      }).catch(function () {\n        _this2.goodsList = [];\n        _this2.totalGoods = 0; // 完成赋值后，把加载状态赋值为false\n\n        _this2.loading = false;\n      });\n    },\n    addGoods: function addGoods() {\n      // 修改标记\n      this.isEdit = false; // 控制弹窗可见：\n\n      this.show = true; // 把oldBrand变为null\n\n      this.oldGoods = {};\n    },\n    deleteGoods: function deleteGoods(oldGoods) {\n      if (oldGoods.saleable) {\n        // 如果是上架商品，则不允许修改\n        this.$message.error(\"不能修改上架商品，请先下架！\");\n        return;\n      }\n\n      this.$http.delete(\"/item/goods/\" + oldGoods.id).then(function () {}).catch(function () {});\n    },\n    editGoods: function () {\n      var _editGoods = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(oldGoods) {\n        var goods;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!oldGoods.saleable) {\n                  _context.next = 3;\n                  break;\n                }\n\n                // 如果是上架商品，则不允许修改\n                this.$message.error(\"不能修改上架商品，请先下架！\");\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _context.next = 5;\n                return this.$http.loadData(\"/item/goods/\" + oldGoods.id);\n\n              case 5:\n                goods = _context.sent;\n                goods.categoryName = oldGoods.categoryName;\n                goods.brandName = oldGoods.brandName; // 修改标记\n\n                this.isEdit = true; // 控制弹窗可见：\n\n                this.show = true; // 获取要编辑的goods\n\n                this.oldGoods = goods;\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function editGoods(_x) {\n        return _editGoods.apply(this, arguments);\n      }\n\n      return editGoods;\n    }(),\n    closeWindow: function closeWindow() {\n      // 重新加载数据\n      this.getDataFromServer(); // 关闭窗口\n\n      this.show = false; // 将步骤调整到1\n\n      this.step = 1;\n    },\n    previous: function previous() {\n      if (this.step > 1) {\n        this.step--;\n      }\n    },\n    next: function next() {\n      if (this.step < 4 && this.$refs.goodsForm.$refs.basic.validate()) {\n        this.step++;\n      }\n    },\n    updateSaleable: function updateSaleable(id, saleable) {\n      var _this3 = this;\n\n      this.$http.put(\"/item/goods/saleable\", this.$qs.stringify({\n        id: id,\n        saleable: saleable\n      })).then(function (resp) {\n        _this3.getDataFromServer();\n\n        _this3.$message.success(\"操作成功！\");\n      }).catch(function (error) {\n        _this3.$message.error(\"操作失败，请重试！\");\n      });\n    },\n    goodsDetail: function goodsDetail(id) {\n      this.dialog = true;\n    }\n  },\n  components: {\n    GoodsForm: GoodsForm\n  }\n};",{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-card class=\"mt-2\">\r\n    <v-toolbar class=\"elevation-0\">\r\n\r\n      <v-flex xs4>\r\n        <v-btn color=\"primary\" @click=\"addGoods\">新增商品</v-btn>\r\n      </v-flex>\r\n      <v-flex xs2>\r\n        <span class=\"subheading\">状态：</span>\r\n        <v-btn-toggle mandatory v-model.lazy=\"saleable\">\r\n          <v-btn large>\r\n            全部\r\n          </v-btn>\r\n          <v-btn :value=\"true\" large>\r\n            上架\r\n          </v-btn>\r\n          <v-btn :value=\"false\" large>\r\n            下架\r\n          </v-btn>\r\n        </v-btn-toggle>\r\n      </v-flex>\r\n\r\n      <v-flex xs2>\r\n        <v-cascader single box\r\n                    url=\"/item/category/of/parent\"\r\n                    v-model=\"search.category\"\r\n                    label=\"商品分类\"/>\r\n      </v-flex>\r\n      <v-spacer></v-spacer>\r\n      <v-flex xs2>\r\n        <!--品牌-->\r\n        <v-autocomplete box\r\n                        single-line\r\n                        :items=\"brandOptions\"\r\n                        item-text=\"name\"\r\n                        item-value=\"id\"\r\n                        label=\"品牌\"\r\n                        v-model=\"search.brandId\"\r\n                        autocomplete\r\n                        clearable\r\n                        dense chips\r\n        >\r\n          <template slot=\"selection\" slot-scope=\"data\">\r\n            <v-chip small>{{ data.item.name}}</v-chip>\r\n          </template>\r\n        </v-autocomplete>\r\n      </v-flex>\r\n      <v-spacer></v-spacer>\r\n      <v-flex xs2>\r\n        <v-text-field label=\"商品编号\" class=\"mb-2\" box @keyup.enter=\"refresh\"\r\n                      hide-details v-model=\"search.id\" append-icon=\"search\"\r\n                      @click:append=\"refresh\"\r\n        ></v-text-field>\r\n      </v-flex>\r\n\r\n    </v-toolbar>\r\n    <v-divider/>\r\n    <v-data-table\r\n        :headers=\"headers\"\r\n        :items=\"goodsList\"\r\n        :pagination.sync=\"pagination\"\r\n        :total-items=\"totalGoods\"\r\n        :loading=\"loading\"\r\n        class=\"elevation-1\"\r\n    >\r\n      <template slot=\"items\" slot-scope=\"props\">\r\n        <td class=\"text-xs-center\">{{ props.item.id }}</td>\r\n        <td class=\"text-xs-center\">{{ props.item.name }}</td>\r\n        <td class=\"text-xs-center\">{{props.item.categoryName}}</td>\r\n        <td class=\"text-xs-center\">{{ props.item.brandName }}</td>\r\n        <td class=\"justify-center layout px-0\">\r\n          <v-tooltip left>\r\n            <v-btn slot=\"activator\" icon @click=\"goodsDetail(props.item.id)\">\r\n              <i class=\"el-icon-search\"/>\r\n            </v-btn>\r\n            <span> 查看商品</span>\r\n          </v-tooltip>\r\n          <v-tooltip left>\r\n            <v-btn slot=\"activator\" icon @click=\"editGoods(props.item)\">\r\n              <i class=\"el-icon-edit\"/>\r\n            </v-btn>\r\n            <span> 修改商品</span>\r\n          </v-tooltip>\r\n          <v-tooltip left>\r\n            <v-btn icon slot=\"activator\" @click=\"deleteGoods(props.item)\">\r\n              <i class=\"el-icon-delete\"/>\r\n            </v-btn>\r\n            <span> 删除商品</span>\r\n          </v-tooltip>\r\n          <v-tooltip left>\r\n            <v-btn slot=\"activator\" icon @click=\"updateSaleable(props.item.id, !props.item.saleable)\">\r\n              <i class=\"el-icon-upload2\" v-if=\"!props.item.saleable\"/>\r\n              <i class=\"el-icon-download\" v-else/>\r\n            </v-btn>\r\n            <span v-if=\"!props.item.saleable\"> 上架商品</span>\r\n            <span v-else> 下架商品</span>\r\n          </v-tooltip>\r\n        </td>\r\n      </template>\r\n    </v-data-table>\r\n    <!--弹出的对话框-->\r\n    <v-dialog max-width=\"800\" v-model=\"show\" persistent scrollable>\r\n      <v-card>\r\n\r\n        <!--对话框的内容，表单-->\r\n        <v-card-text class=\"px-0 py-0\" style=\"height: 550px;\">\r\n          <goods-form @fallback=\"previous\" :oldGoods=\"oldGoods\" :step=\"step\" @close=\"closeWindow\" :is-edit=\"isEdit\" ref=\"goodsForm\"/>\r\n        </v-card-text>\r\n        <!--底部按钮，用来操作步骤线-->\r\n        <v-card-actions class=\"elevation-0\">\r\n          <v-flex class=\"xs3 mx-auto\">\r\n            <v-btn @click=\"previous\" color=\"primary\" :disabled=\"step === 1\">上一步</v-btn>\r\n            <v-btn @click=\"next\" color=\"primary\" :disabled=\"step === 4\">下一步</v-btn>\r\n          </v-flex>\r\n          <v-flex xs1>\r\n            <v-btn text icon>\r\n              <v-icon @click=\"closeWindow\">mdi-close-circle-outline</v-icon>\r\n            </v-btn>\r\n          </v-flex>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n    <v-dialog\r\n        v-model=\"dialog\"\r\n        max-width=\"290\"\r\n    >\r\n      <v-card>\r\n        <h1>\r\n          我是商品的预览页面\r\n        </h1>\r\n        <h1>\r\n          我是商品的预览页面\r\n        </h1>\r\n        <h1>\r\n          我是商品的预览页面\r\n        </h1>\r\n        <h1>\r\n          我是商品的预览页面\r\n        </h1>\r\n      </v-card>\r\n\r\n\r\n    </v-dialog>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\n  // 导入自定义的表单组件\r\n  import GoodsForm from './GoodsForm'\r\n\r\n  export default {\r\n    name: \"goods\",\r\n    data() {\r\n      return {\r\n        dialog: false,\r\n        saleable: true, // 上架还是下架\r\n        brandOptions: [],\r\n        search: {\r\n          id: null,\r\n          category: {},\r\n          brandId: null\r\n        }, // 搜索过滤字段\r\n        totalGoods: 0, // 总条数\r\n        goodsList: [], // 当前页品牌数据\r\n        loading: true, // 是否在加载中\r\n        pagination: {}, // 分页信息\r\n        headers: [\r\n          {text: 'id', align: 'center', sortable: false, value: 'id'},\r\n          {text: '商品名称', align: 'center', sortable: false, value: 'name'},\r\n          {text: '商品分类', align: 'center', sortable: false, value: 'categoryName'},\r\n          {text: '品牌', align: 'center', value: 'brandName', sortable: false,},\r\n          {text: '操作', align: 'center', sortable: false}\r\n        ],\r\n        show: false,// 控制对话框的显示\r\n        oldGoods: {}, // 即将被编辑的商品信息\r\n        isEdit: false, // 是否是编辑\r\n        step: 1, // 子组件中的步骤线索引，默认为1\r\n      }\r\n    },\r\n    mounted() { // 渲染后执行\r\n      // 查询数据\r\n      //this.getDataFromServer();\r\n    },\r\n    watch: {\r\n      pagination: { // 监视pagination属性的变化\r\n        deep: true, // deep为true，会监视pagination的属性及属性中的对象属性变化\r\n        handler() {\r\n          // 变化后的回调函数，这里我们再次调用getDataFromServer即可\r\n          this.getDataFromServer();\r\n        }\r\n      },\r\n      saleable() {\r\n        this.refresh();\r\n      },\r\n      \"search.category\"(val) {\r\n        if (val) {\r\n          this.$http\r\n            .get(\"/item/brand/of/category?id=\" + val.id)\r\n            .then(({data}) => {\r\n              this.brandOptions = data;\r\n            });\r\n        }\r\n        this.refresh();\r\n\r\n      },\r\n      \"search.brandId\"(val) {\r\n        this.refresh();\r\n      }\r\n    },\r\n    methods: {\r\n      refresh() {\r\n        if (this.pagination.page !== 1) {\r\n          this.pagination.page = 1;\r\n          return;\r\n        }\r\n        this.getDataFromServer();\r\n      },\r\n      getDataFromServer() { // 从服务的加载数的方法。\r\n        // 发起请求\r\n        this.$http.get(\"/item/goods/spu/page\", {\r\n          params: {\r\n            id: this.search.id || null,\r\n            categoryId: this.search.category ? this.search.category.id : null, // 搜索条件\r\n            brandId: this.search.brandId || null,\r\n            saleable: this.saleable === 0 ? null : this.saleable, // 上下架\r\n            page: this.pagination.page,// 当前页\r\n            rows: this.pagination.rowsPerPage,// 每页大小\r\n          }\r\n        }).then(resp => { // 这里使用箭头函数\r\n          this.goodsList = resp.data.items;\r\n          this.totalGoods = resp.data.total;\r\n          // 完成赋值后，把加载状态赋值为false\r\n          this.loading = false;\r\n        }).catch(() => {\r\n          this.goodsList = [];\r\n          this.totalGoods = 0;\r\n          // 完成赋值后，把加载状态赋值为false\r\n          this.loading = false;\r\n        })\r\n      },\r\n      addGoods() {\r\n        // 修改标记\r\n        this.isEdit = false;\r\n        // 控制弹窗可见：\r\n        this.show = true;\r\n        // 把oldBrand变为null\r\n        this.oldGoods = {};\r\n      },\r\n      deleteGoods(oldGoods) {\r\n        if (oldGoods.saleable) {\r\n          // 如果是上架商品，则不允许修改\r\n          this.$message.error(\"不能修改上架商品，请先下架！\");\r\n          return;\r\n        }\r\n        this.$http.delete(\"/item/goods/\" + oldGoods.id)\r\n          .then(() => {\r\n\r\n          })\r\n          .catch(() => {\r\n\r\n          })\r\n      },\r\n      async editGoods(oldGoods) {\r\n        if (oldGoods.saleable) {\r\n          // 如果是上架商品，则不允许修改\r\n          this.$message.error(\"不能修改上架商品，请先下架！\");\r\n          return;\r\n        }\r\n        // 发起请求，查询spu、商品详情、和skus\r\n        let goods = await this.$http.loadData(\"/item/goods/\" + oldGoods.id);\r\n        goods.categoryName = oldGoods.categoryName;\r\n        goods.brandName = oldGoods.brandName;\r\n        // 修改标记\r\n        this.isEdit = true;\r\n        // 控制弹窗可见：\r\n        this.show = true;\r\n        // 获取要编辑的goods\r\n        this.oldGoods = goods;\r\n      },\r\n      closeWindow() {\r\n        // 重新加载数据\r\n        this.getDataFromServer();\r\n        // 关闭窗口\r\n        this.show = false;\r\n        // 将步骤调整到1\r\n        this.step = 1;\r\n      },\r\n      previous() {\r\n        if (this.step > 1) {\r\n          this.step--\r\n        }\r\n      },\r\n      next() {\r\n        if (this.step < 4 && this.$refs.goodsForm.$refs.basic.validate()) {\r\n          this.step++\r\n        }\r\n      },\r\n      updateSaleable(id, saleable) {\r\n        this.$http.put(\"/item/goods/saleable\", this.$qs.stringify({id, saleable}))\r\n          .then(resp => {\r\n            this.getDataFromServer();\r\n            this.$message.success(\"操作成功！\");\r\n          })\r\n          .catch(error => {\r\n            this.$message.error(\"操作失败，请重试！\");\r\n          })\r\n      },\r\n      goodsDetail(id) {\r\n        this.dialog = true\r\n      }\r\n    },\r\n    components: {\r\n      GoodsForm\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/views/item/goods"}]}